name: Python SDK Publish

on:
  push:
    tags:
      - 'sdk/py/v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    defaults:
      run:
        working-directory: python
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        pytest tests/unit -v --cov=solana_ai_registries
        pytest tests/integration -m devnet -v
      env:
        SOLANA_RPC_URL: https://api.devnet.solana.com
    
    - name: Run code quality checks
      run: |
        black --check .
        isort --check-only .
        mypy .
        flake8 .

  build:
    needs: test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: python
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/sdk/py/v}
        echo "version=$TAG" >> $GITHUB_OUTPUT
        echo "Version: $TAG"
    
    - name: Update version in pyproject.toml
      run: |
        sed -i 's/version = "0.1.0"/version = "${{ steps.version.outputs.version }}"/' pyproject.toml
        grep "version =" pyproject.toml
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: |
        twine check dist/*
        python -m pip install dist/*.whl
        python -c "import solana_ai_registries; print(f'Package version: {solana_ai_registries.__version__}')"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-dist
        path: python/dist/

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/sdk/py/v') && contains(github.ref, 'rc')
    
    defaults:
      run:
        working-directory: python
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-dist
        path: python/dist/
    
    - name: Install twine
      run: pip install twine
    
    - name: Publish to TestPyPI
      run: twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/sdk/py/v') && !contains(github.ref, 'rc')
    
    defaults:
      run:
        working-directory: python
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-dist
        path: python/dist/
    
    - name: Install twine
      run: pip install twine
    
    - name: Publish to PyPI
      run: twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: python/dist/*
        name: Python SDK ${{ github.ref_name }}
        body: |
          ## Python SDK Release ${{ github.ref_name }}
          
          This release includes the Python SDK for Solana AI Registries.
          
          ### Installation
          ```bash
          pip install solana-ai-registries==${{ steps.version.outputs.version }}
          ```
          
          ### Changes
          See [CHANGELOG.md](python/CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: [publish-pypi, publish-testpypi]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: needs.publish-pypi.result == 'success'
      run: |
        echo "Python SDK successfully published to PyPI!"
        echo "Version: ${GITHUB_REF#refs/tags/sdk/py/v}"
    
    - name: Notify failure
      if: failure()
      run: |
        echo "Python SDK publication failed!"
        echo "Please check the workflow logs for details."